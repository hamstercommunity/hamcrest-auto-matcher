plugins {
    id "java-library"
    id "signing"
    id "maven-publish"
    id "jacoco"
    id "com.github.hierynomus.license" version "0.15.0"
    id "org.sonarqube" version "3.1.1"
    id "io.codearte.nexus-staging" version "0.22.0"
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.hamcrest:hamcrest-all:1.3'
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.j8unit:core:4.12.1'
}

group 'org.itsallcode'
version = '0.5.0'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(11)
    }
    withJavadocJar()
    withSourcesJar()
}

javadoc {
    options.addBooleanOption('html5', true)
}

tasks.withType(JavaCompile) {
    options.compilerArgs << '-Xlint:all'
    options.encoding = 'UTF-8'
}

license {
    header = file('gradle/license-header.txt')
}

jacocoTestReport {
    reports {
        xml.enabled true
    }
}

rootProject.tasks["sonarqube"].dependsOn(tasks["jacocoTestReport"])

def getOptionalProperty(String name) {
    if(project.hasProperty(name)) {
        return project.property(name)
    }
    logger.info("Project property '${name}' not available. Please it to ~/.gradle/gradle.properties")
    return null
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            pom {
                name = 'Hamcrest auto-matcher'
                description = 'Automatic hamcrest matcher for model classes'
                url = 'https://github.com/itsallcode/hamcrest-auto-matcher'

                licenses {
                    license {
                        name = 'GNU General Public License, Version 3.0'
                        url = 'https://www.gnu.org/licenses/gpl-3.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'kaklakariada'
                        name = 'Christoph'
                        email = 'kaklakariada@chp1.net'
                    }
                }
                scm {
                    connection = 'scm:git:https://github.com/itsallcode/hamcrest-auto-matcher.git'
                    developerConnection = 'scm:git:https://github.com/itsallcode/hamcrest-auto-matcher.git'
                    url = 'https://github.com/itsallcode/hamcrest-auto-matcher'
                }
            }
        }
    }

    repositories {
        maven {
            def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
            def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            allowInsecureProtocol = false
            credentials(PasswordCredentials) {
                username = getOptionalProperty("ossrhUsername")
                password = getOptionalProperty("ossrhPassword")
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}

nexusStaging {
    packageGroup = project.group
    username = getOptionalProperty("ossrhUsername")
    password = getOptionalProperty("ossrhPassword")
}
